{
  "definitions": {
    "fetchTokenResponse": {
      "type": "object",
      "required": ["token", "expiresIn"],
      "decription": "Fetch Token API response with the token corresponding to API keys",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token to be used in subsequent requests"
        },
        "expiresIn": {
          "type": "integer",
          "description": "Token expiry duration in seconds"
        }
      }
    },
    "processingFees": {
      "type": "object",
      "required": ["amount"],
      "properties": {
        "amount": { "$ref": "#/definitions/amount" },
        "charges": {
          "type": "array",
          "items": { "$ref": "#/definitions/charges" },
          "description": "Charges applicable for the transaction made."
        }
      },
      "description": "Fees involved in processing a particular bill payment / refund."
    },
    "items": {
      "type": "object",
      "required": ["displayName", "aggregates"],
      "properties": {
        "measurementUnit": {
          "enum": ["WEIGHT", "VOLUME", "NUMBER"],
          "type": "string",
          "description": "Unit of measurement for the item."
        },
        "unitPrice": { "$ref": "#/definitions/amount" },
        "quantity": {
          "type": "integer",
          "description": "Total number of items of one type."
        },
        "fees": {
          "type": "array",
          "items": { "$ref": "#/definitions/fees" },
          "description": "Array of fees per item."
        },
        "code": {
          "type": "string",
          "description": "Unique code for the item in the biller system."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the item on the payer app."
        },
        "discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/discount" },
          "description": "Contains discounts on the items."
        },
        "aggregates": { "$ref": "#/definitions/itemAggregates" },
        "taxes": {
          "type": "array",
          "items": { "$ref": "#/definitions/itemTax" },
          "description": "Contains taxes on the items."
        },
        "description": { "type": "string", "description": "Item description." }
      },
      "description": "Line items for the bill."
    },
    "transactionAggregate": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/transactionCount" }],
      "required": ["amount"],
      "properties": { "amount": { "$ref": "#/definitions/amount" } }
    },
    "discount": {
      "type": "object",
      "required": ["amount"],
      "properties": {
        "code": {
          "type": "string",
          "description": "Coupon or voucher used to apply the discount."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "reason": {
          "type": "string",
          "description": "Reason why the discount was applied."
        },
        "computation": { "$ref": "#/definitions/computation" }
      },
      "description": "Contains details about the discount in a particular bill, if available. In a given bill, there could be upto three kinds of discount, bill-level, item-level and fee-level."
    },
    "billType": {
      "enum": ["GST", "COLLECT"],
      "type": "string",
      "description": "Type of bill. eg. GST."
    },
    "settlementAccount": {
      "type": "object",
      "required": ["id", "ifsc"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Beneficiary account id as in Setu's biller actor configuration."
        },
        "ifsc": {
          "type": "string",
          "description": "Beneficiary account IFSC as in Setu's biller actor configuration."
        },
        "name": {
          "type": "string",
          "description": "Beneficiary account name as in Setu's biller actor configuration."
        }
      },
      "x-nullable": true,
      "description": "Details of the settlement account to which a split has to be settled."
    },
    "billTax": {
      "type": "object",
      "required": ["displayName", "amount"],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of tax component levied."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "components": {
          "type": "array",
          "items": { "$ref": "#/definitions/taxComponent" },
          "description": "Parent object containing the breakdown of individual tax components at the bill level."
        },
        "computation": { "$ref": "#/definitions/computation" },
        "displayName": {
          "type": "string",
          "description": "Display name for the tax applied on the particular bill."
        }
      },
      "description": "Tax parent object containing all the relevant taxes and their individual components at the bill-level."
    },
    "productInstance": {
      "type": "object",
      "required": ["id", "name"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a biller product instance in Setu."
        },
        "name": {
          "type": "string",
          "description": "Name of the biller product instance in Setu."
        }
      },
      "description": "Biller product details such as the ID and Name."
    },
    "billWithBillerBillIdResponse": {
      "type": "object",
      "required": ["bills"],
      "properties": {
        "bills": {
          "type": "array",
          "items": { "$ref": "#/definitions/platformBill" },
          "description": "List of bills for the supplied biller billID."
        }
      },
      "description": "Details of bills for the supplied biller billID."
    },
    "notificationRequest": {
      "type": "object",
      "required": ["partnerDetails", "events"],
      "x-go-name": "NotificationRequestAPIModel",
      "properties": {
        "events": {
          "type": "array",
          "items": { "$ref": "#/definitions/eventDetails" },
          "description": "Array of events."
        },
        "partnerDetails": { "$ref": "#/definitions/partnerDetails" }
      }
    },
    "billFetchStatus": {
      "enum": ["NOT_SUPPORTED", "NO_OUTSTANDING", "AVAILABLE"],
      "type": "string",
      "description": "Types of fetch bill statuses."
    },
    "createPaymentLinkResponse": {
      "type": "object",
      "example": {
        "name": "W3H325-ElectricBill",
        "paymentLink": {
          "upiID": "setu365967071101584749@kaypay",
          "upiLink": "upi://pay?pa=setu365967071101584749@kaypay&pn=W3H325-ElectricBill&am=100.00&tr=EB-1123-345324&tn=Payment+for+EB-1123-345324&cu=INR"
        },
        "platformBillID": 365967071101584800
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name of bill."
        },
        "paymentLink": { "$ref": "#/definitions/vPAPaymentAddress" },
        "platformBillID": {
          "type": "string",
          "description": "Unique identifier of bill in Setu."
        }
      }
    },
    "billCustomer": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/customer" }],
      "x-go-name": "Customer"
    },
    "getReportRequest": {
      "type": "object",
      "required": ["productInstanceIDOfReport"],
      "properties": {
        "filters": {
          "type": "object",
          "description": "Payload containing the filters to be applied."
        },
        "productInstanceIDOfReport": {
          "type": "string",
          "description": "The unique identifier of the product instance in app for which the report is fetched."
        }
      },
      "description": "get report request payload"
    },
    "fulfilmentPaymentDetails": {
      "type": "object",
      "required": ["paidOn", "amount", "instrument"],
      "properties": {
        "utr": {
          "type": "string",
          "description": "Bank UTR for the bill payment made by the customer or the challan number in case of CASH payments."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "paidOn": {
          "type": "string",
          "format": "date-time",
          "description": "Payment date of the bill in the ISO 8601 format, upto seconds precision."
        },
        "scheme": { "$ref": "#/definitions/paymentSchemes" },
        "instrument": { "$ref": "#/definitions/paymentInstrument" },
        "accountIdentifier": {
          "type": "string",
          "description": "The masked digits of the account used. In case of `CC` / `DC` / `PREPAID`, it is the last 4 digits of the Card Number. In case of  `NEFT` / `RTGS` / `IFT` / `IMPS`, it is the last 4 digits of the Account Number. In case of `UPI`, it is the VPA. In case of  `PPI` / `CASH`, it is the last 4 digits of Mobile Number."
        }
      }
    },
    "transactionTotal": {
      "type": "object",
      "properties": {
        "total": { "$ref": "#/definitions/transactionAggregate" }
      }
    },
    "fetchBillersResponse": {
      "type": "object",
      "properties": {
        "billers": {
          "type": "array",
          "items": { "$ref": "#/definitions/biller" },
          "description": "List of registered billers."
        }
      }
    },
    "callbackresponse": {
      "type": "object",
      "description": "Callback response data"
    },
    "bill": {
      "type": "object",
      "required": [
        "customerAccount",
        "amountExactness",
        "billerBillID",
        "recurrence",
        "generatedOn",
        "aggregates"
      ],
      "x-go-name": "BillAPIModel",
      "properties": {
        "items": {
          "type": "array",
          "items": { "$ref": "#/definitions/items" },
          "description": "Contains individual line items for the bill."
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "Due date of the genrated bill in the ISO 8601 format, upto seconds precision. This date has to be greater than the `billGeneratedOn` date."
        },
        "settlement": { "$ref": "#/definitions/settlementConfiguration" },
        "fees": {
          "type": "array",
          "items": { "$ref": "#/definitions/fees" },
          "description": "An array containing bill-level additional costs, such as \"Delivery fees\" or \"Late charges\"."
        },
        "generatedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Generation date of the bill in the ISO 8601 format, upto seconds precision."
        },
        "customerAccount": { "$ref": "#/definitions/billCustomerAccount" },
        "recurrence": { "$ref": "#/definitions/billRecurrence" },
        "discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/discount" },
          "description": "Contains discounts on the bill."
        },
        "platformFee": { "$ref": "#/definitions/fees" },
        "aggregates": { "$ref": "#/definitions/billAggregates" },
        "additionalInfo": {
          "type": "object",
          "description": "Additional information for the bill passed by the biller."
        },
        "billerBillID": {
          "type": "string",
          "description": "Unique bill identifier in the biller's system."
        },
        "taxes": {
          "type": "array",
          "items": { "$ref": "#/definitions/billTax" },
          "description": "Contains taxes for the bill."
        },
        "amountExactness": { "$ref": "#/definitions/amountExactness" },
        "validationRules": { "$ref": "#/definitions/validationRules" }
      },
      "description": "List of required details to pay a bill."
    },
    "triggerBillSettlementRequest": {
      "type": "object",
      "required": [
        "platformBillID",
        "platformTransactionID",
        "reconciledAmount"
      ],
      "properties": {
        "platformBillID": {
          "type": "string",
          "description": "Platform bill id of the bill for which the settlement has to triggered."
        },
        "reconciledAmount": { "$ref": "#/definitions/amount" },
        "platformTransactionID": {
          "type": "string",
          "description": "Platform transaction id of the bill for which the settlement has to triggered."
        }
      }
    },
    "computation": {
      "type": "object",
      "required": ["method", "value"],
      "properties": {
        "value": {
          "type": "number",
          "description": "Amount value in the smallest subunit of the currency. If a currency has two or more subunits, use the smallest one. For example, For INR it would be paisa, and for Yen, which has two subunits sen(1/100) and rin(1/1000), it would be rin."
        },
        "method": {
          "enum": ["PERCENTAGE", "VALUE"],
          "type": "string",
          "description": "The method used to calculate the value of a particular component. This is usually done as a flat fee or a percentage. Some examples could be calculating the processing fees for a bill, or the discount amount for an item."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency code of the amount, in the ISO-4217 standard."
        }
      }
    },
    "itemAggregates": {
      "type": "object",
      "required": ["total"],
      "properties": {
        "tax": { "$ref": "#/definitions/amount" },
        "total": { "$ref": "#/definitions/amount" },
        "discount": { "$ref": "#/definitions/amount" },
        "subTotal": { "$ref": "#/definitions/amount" }
      },
      "description": "Aggregate section for item."
    },
    "customerIdentifier": {
      "type": "object",
      "required": ["attributeName", "attributeValue"],
      "properties": {
        "attributeName": {
          "type": "string",
          "description": "Attribute used to identify a customer of a biller. Could be phone number, PAN or email, depending on the biller."
        },
        "attributeValue": {
          "type": "string",
          "description": "Value of the above customer identifier of a biller. This is entered by the customer in the payer app."
        }
      },
      "description": "Unique customer identifier for a particular biller."
    },
    "billerFetchBillsResponse": {
      "type": "object",
      "required": ["customer", "billDetails"],
      "properties": {
        "customer": { "$ref": "#/definitions/customer" },
        "billDetails": { "$ref": "#/definitions/fetchBillsDetails" }
      },
      "description": "Details of bills for the supplied customer identifiers."
    },
    "partner": {
      "type": "object",
      "required": ["id", "name"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a biller partner in Setu."
        },
        "name": {
          "type": "string",
          "description": "Display name of the biller partner."
        }
      },
      "description": "Partner details such as ID and Name."
    },
    "billCustomerAccount": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/customerAccount" }],
      "x-go-name": "CustomerAccount"
    },
    "error": {
      "type": "object",
      "required": ["code", "title", "detail", "docURL"],
      "x-go-name": "ErrorAPIModel",
      "properties": {
        "code": {
          "type": "string",
          "description": "Custom Setu error code."
        },
        "title": {
          "type": "string",
          "description": "Short human-readable summary of error."
        },
        "detail": {
          "type": "string",
          "description": "Detailed description of error."
        },
        "docURL": {
          "type": "string",
          "description": "Link to reference document with details about the error."
        }
      }
    },
    "eventDetails": {
      "type": "object",
      "required": ["id", "type", "timeStamp", "data"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for an event."
        },
        "data": {
          "type": "object",
          "description": "Payload of an event which contains detailed information about an event."
        },
        "type": {
          "type": "string",
          "description": "The type of event generated by this appID and productInstanceID."
        },
        "timeStamp": {
          "type": "integer",
          "description": "The time at which an event occured. It is denoted in milliseconds from the Unix epoch."
        }
      },
      "description": "Details about the event."
    },
    "paymentSchemes": {
      "enum": [
        "NETBANKING",
        "AMEX",
        "DINERS",
        "DISCOVER",
        "JCB",
        "MAESTRO",
        "MASTERCARD",
        "RUPAY",
        "VISA",
        "OTHER",
        "NONE"
      ],
      "type": "string",
      "description": "Payment schemes supported by Setu."
    },
    "paymentAddressType": {
      "enum": ["ACCOUNT", "VPA"],
      "type": "string",
      "description": "Type of paymnent address. Can be a bank account or UPI handle."
    },
    "errorResponse": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/baseResponse" }],
      "required": ["error"],
      "x-go-name": "ErrorResponseAPIModel",
      "properties": { "error": { "$ref": "#/definitions/errorResponseData" } }
    },
    "billerFetchBillsRequest": {
      "type": "object",
      "required": ["customerIdentifiers"],
      "properties": {
        "customerIdentifiers": {
          "type": "array",
          "items": { "$ref": "#/definitions/customerIdentifier" },
          "description": "List of parameters to uniquely identify a customer."
        }
      },
      "description": "Details of customer identifiers."
    },
    "billReceiptWithStatus": {
      "type": "object",
      "required": ["status"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Receipt number of the bill."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Receipt date of the bill."
        },
        "status": { "$ref": "#/definitions/receiptFetchStatus" }
      },
      "description": "Receipt details of a bill."
    },
    "createPaymentLinkRequest": {
      "type": "object",
      "example": {
        "name": "W3H325-ElectricBill",
        "amount": { "value": 10000, "currencyCode": "INR" },
        "dueDate": "2020-05-15T12:23:50Z",
        "expiryDate": "2020-05-15T12:23:50Z",
        "settlement": {
          "parts": [
            {
              "split": { "unit": "INR", "value": 1000 },
              "account": { "id": "1120419240129", "ifsc": "SETU000012" },
              "remarks": "EXACT sample split"
            }
          ],
          "primaryAccount": { "id": "1120419241283", "ifsc": "SETU000012" }
        },
        "billerBillID": "EB-1123-345324",
        "additionalInfo": {
          "UUID": "jlkjdfl-ahaklsj-alsdjklj",
          "tags": "electricity"
        },
        "amountExactness": "EXACT"
      },
      "required": ["billerBillID", "amountExactness"],
      "x-go-name": "PaymentLinkAPIModel",
      "properties": {
        "expiryDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry date of the paymentLink in the ISO 8601 format, upto seconds precision."
        },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "description": "Due date of the bill in the ISO 8601 format, upto seconds precision."
        },
        "settlement": { "$ref": "#/definitions/settlementConfiguration" },
        "name": {
          "type": "string",
          "description": "Payee name to be populated in the Payment Link."
        },
        "additionalInfo": { "$ref": "#/definitions/additionalInfo" },
        "billerBillID": {
          "type": "string",
          "description": "Unique bill identifier provided by the biller. For GST, it is the CPIN."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "amountExactness": { "$ref": "#/definitions/amountExactness" },
        "validationRules": { "$ref": "#/definitions/validationRules" }
      }
    },
    "baseType": { "enum": ["UPI", "ACCOUNT"], "type": "string" },
    "getReportResponse": {
      "type": "object",
      "x-go-name": "ReportResponseAPIModel",
      "properties": {
        "records": {
          "type": "array",
          "items": { "type": "object" },
          "description": "A collection of individual data fields in a report."
        },
        "metadata": {
          "type": "object",
          "description": "Basic information about what is contained in the report."
        },
        "reportDetails": {
          "type": "object",
          "description": "(Deprecated)Basic information about what is contained in the report."
        }
      },
      "description": "Report response data"
    },
    "setuBillStatus": {
      "enum": [
        "BILL_CREATED",
        "PAYMENT_SUCCESSFUL",
        "PAYMENT_FAILED",
        "CREDIT_RECEIVED",
        "SETTLEMENT_SUCCESSFUL",
        "SETTLEMENT_FAILED",
        "BILL_EXPIRED"
      ],
      "type": "string",
      "description": "Current status of bill in Setu."
    },
    "fees": {
      "type": "object",
      "required": ["displayName", "aggregates"],
      "properties": {
        "taxes": {
          "type": "array",
          "items": { "$ref": "#/definitions/itemTax" },
          "description": "Contains taxes on the fees."
        },
        "quantity": {
          "type": "integer",
          "description": "Total number of fee quantity."
        },
        "unitCost": { "$ref": "#/definitions/amount" },
        "discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/discount" },
          "description": "Contains discounts on the fees."
        },
        "aggregates": { "$ref": "#/definitions/feeAggregates" },
        "description": {
          "type": "string",
          "description": "Description of the fees."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the fees."
        }
      },
      "description": "Fees levied on the bill or individual items."
    },
    "settlementConfiguration": {
      "type": "object",
      "required": ["primaryAccount"],
      "properties": {
        "parts": {
          "type": "array",
          "items": { "$ref": "#/definitions/settlementParts" },
          "description": "Array of settlement parts which have to be split."
        },
        "primaryAccount": { "$ref": "#/definitions/settlementAccount" }
      },
      "description": "Contains the settlement configuration for the bill."
    },
    "settlementUnit": {
      "enum": ["BPS", "PERCENTAGE", "INR", "INP"],
      "type": "string"
    },
    "paymentInstrument": {
      "enum": [
        "UPI",
        "CASH",
        "NEFT",
        "RTGS",
        "IMPS",
        "IFT",
        "CC",
        "DC",
        "Prepaid",
        "Internet Banking",
        "Debit Card",
        "Credit Card",
        "Cash",
        "Wallet",
        "Prepaid Card",
        "AEPS",
        "Account Transfer",
        "Bharat QR",
        "USSD",
        "PPI"
      ],
      "type": "string"
    },
    "chargeType": {
      "enum": [
        "MDR",
        "MDR_GST",
        "COMMISSION",
        "COMMISSION_GST",
        "REFUND",
        "REFUND_GST"
      ],
      "type": "string",
      "description": "Type of charge levied for processing the payment."
    },
    "paymentAddress": {
      "type": "object",
      "required": ["addressType", "identifier", "additionalInfo"],
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Unique identifier of payment address. For ACCOUNT type, it will be AccountID."
        },
        "addressType": { "$ref": "#/definitions/paymentAddressType" },
        "additionalInfo": {
          "type": "object",
          "description": "Payment address details for this type."
        }
      },
      "description": "Payment address info where funds can be deposited."
    },
    "customerAccount": {
      "type": "object",
      "required": ["id"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the customer account in the biller system."
        },
        "additionalInfo": {
          "type": "object",
          "description": "Additional details for the customer account in the biller system."
        }
      },
      "description": "Details of a customer account in the biller system."
    },
    "fetchTokenRequest": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "secret from the V2 API key pair"
        },
        "clientID": {
          "type": "string",
          "description": "clientID from the V2 API key pair"
        }
      },
      "description": "Fetch Token API payload"
    },
    "fetchBillsDetails": {
      "type": "object",
      "required": ["billFetchStatus", "bills"],
      "x-go-name": "FetchBillDetailsAPIModel",
      "properties": {
        "bills": {
          "type": "array",
          "items": { "$ref": "#/definitions/bill" },
          "description": "List of outstanding bills."
        },
        "billFetchStatus": { "$ref": "#/definitions/billFetchStatus" }
      },
      "description": "Details of the bill to be paid."
    },
    "billReceipt": {
      "type": "object",
      "required": ["id", "date"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Receipt number of the bill."
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Receipt date of the bill."
        }
      },
      "description": "Receipt details of a bill."
    },
    "bankAccount": {
      "type": "object",
      "required": ["accountID"],
      "properties": {
        "ifsc": { "type": "string", "description": "IFSC of the account." },
        "accountID": {
          "type": "string",
          "description": "Used to uniquely identify the account."
        }
      }
    },
    "transactionCount": {
      "type": "object",
      "required": ["transactionCount"],
      "properties": {
        "transactionCount": {
          "type": "number",
          "format": "integer",
          "description": "Total number of transactions made in the process."
        }
      }
    },
    "fetchReceiptRequest": {
      "type": "object",
      "required": ["platformBillID", "billerBillID", "paymentDetails"],
      "properties": {
        "billerBillID": {
          "type": "string",
          "description": "Unique bill identifier in the biller's system."
        },
        "paymentDetails": {
          "type": "object",
          "required": [
            "amountPaid",
            "billAmount",
            "platformTransactionRefID",
            "instrument",
            "uniquePaymentRefID"
          ],
          "properties": {
            "amountPaid": { "$ref": "#/definitions/amount" },
            "billAmount": { "$ref": "#/definitions/amount" },
            "instrument": {
              "type": "string",
              "description": "Payment method used to pay the bill."
            },
            "additionalInfo": {
              "type": "object",
              "example": {
                "Expiry": "2021-07-08",
                "LoanNumber": "12345678"
              },
              "description": "additionalInfo is an object where you can pass any key, value—Setu will send it back in the payment successful notification."
            },
            "uniquePaymentRefID": {
              "type": "string",
              "description": "Unique reference identifier for the money that Setu received as a payment for the bill."
            }
          },
          "description": "Details highlighting the payment of a bill."
        },
        "platformBillID": {
          "type": "string",
          "description": "Unique bill identifier in the Setu system."
        }
      }
    },
    "amountValidation": {
      "type": "object",
      "properties": {
        "maximum": {
          "type": "number",
          "format": "int",
          "description": "Maximum amount to be accepted as payment."
        },
        "minimum": {
          "type": "number",
          "format": "int",
          "description": "Minimum amount to be accepted as payment."
        }
      },
      "description": "Amount validation rules."
    },
    "settlementSplit": {
      "type": "object",
      "required": ["value", "unit"],
      "properties": {
        "unit": { "$ref": "#/definitions/settlementUnit" },
        "value": {
          "type": "number",
          "description": "The value of the split. The value will be an integer in case of `INR` and `BPS`, float in case of `PERCENTAGE`."
        }
      },
      "description": "Details of the settlement split which has to be settled."
    },
    "taxComponent": {
      "type": "object",
      "required": ["displayName", "amount"],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of tax component levied. In a given bill, this will be the breakup of the different types of tax applied."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "computation": { "$ref": "#/definitions/computation" },
        "displayName": {
          "type": "string",
          "description": "Display name for the particulr tax component on the payers app."
        }
      },
      "description": "Describes the tax levied on a particular bill. In a given bill, there could be upto three kinds of taxes, bill-level, item-level and fee-level."
    },
    "baseResponse": {
      "type": "object",
      "required": ["status", "success"],
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "HTTP status code for the response."
        },
        "success": {
          "type": "boolean",
          "description": "Indicator to denote whether the request is successful."
        }
      }
    },
    "billFulfilmentResponse": {
      "type": "object",
      "required": ["platformBillID", "platformBillStatus", "receipt"],
      "x-go-name": "BillFulfilmentResponseAPIModel",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name of bill."
        },
        "receipt": { "$ref": "#/definitions/billReceiptWithStatus" },
        "platformBillID": {
          "type": "string",
          "description": "Unique identifier of bill in Setu."
        },
        "platformBillStatus": { "$ref": "#/definitions/setuBillStatus" }
      }
    },
    "billSettlementDetails": {
      "type": "object",
      "required": [
        "vanAddress",
        "ifsc",
        "utr",
        "amount",
        "instrument",
        "aggregates",
        "transactions"
      ],
      "properties": {
        "utr": {
          "type": "string",
          "description": "Bank UTR for the bill payment made by the customer or the challan number in case of CASH payments."
        },
        "ifsc": {
          "type": "string",
          "description": "IFSC for the VAN address to which the payment was made."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "scheme": { "$ref": "#/definitions/paymentSchemes" },
        "aggregates": { "$ref": "#/definitions/settlementAggregates" },
        "instrument": { "$ref": "#/definitions/paymentInstrument" },
        "vanAddress": {
          "type": "string",
          "description": "VAN address to which the settlement for the bills were made."
        },
        "transactions": {
          "type": "array",
          "items": { "$ref": "#/definitions/transactions" },
          "description": "Reason for validation failure."
        }
      }
    },
    "fetchBillsResponse": {
      "type": "object",
      "required": ["bills"],
      "properties": {
        "bills": {
          "type": "array",
          "items": { "$ref": "#/definitions/platformBill" },
          "description": "List of bills for the supplied customer identifiers."
        }
      },
      "description": "Details of bills for the supplied customer identifiers."
    },
    "paymentLinkStatusResponse": {
      "type": "object",
      "example": {
        "name": "W3H325-ElectricBill",
        "status": "CREDIT_RECEIVED",
        "receipt": { "id": "b94d58f0-8acb", "date": "2020-05-15T12:30:27Z" },
        "platformBillID": "365967071101584800"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name of bill."
        },
        "status": { "$ref": "#/definitions/setuBillStatus" },
        "receipt": { "$ref": "#/definitions/billReceipt" },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation date of the paymentLink in the format \\\"2019-08-01T08:28:12Z\\\"."
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry date of the paymentLink in the format \\\"2019-08-01T08:28:12Z\\\"."
        },
        "amountPaid": { "$ref": "#/definitions/amount" },
        "paymentLink": { "$ref": "#/definitions/vPAPaymentAddress" },
        "platformBillID": {
          "type": "string",
          "description": "Unique identifier of bill in Setu."
        }
      }
    },
    "errorResponseData": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/error" }],
      "required": ["traceID"],
      "x-go-name": "ErrorResponseDataAPIModel",
      "properties": {
        "errors": {
          "type": "array",
          "items": { "$ref": "#/definitions/error" },
          "description": "List of specific child errors for this request."
        },
        "traceID": {
          "type": "string",
          "description": "Unique trace request identifier for tracing and debugging. Provide this to Setu support."
        }
      },
      "description": "Object containing data about the error."
    },
    "setuBillDeemedStatus": {
      "enum": ["NOT_DEEMED", "DEEMED", "DEEMED_RETRY_SUCCESSFUL"],
      "type": "string",
      "description": "Current deemed status of bill in Setu."
    },
    "receiptFetchStatus": {
      "enum": ["AVAILABLE", "NOT_SUPPORTED", "UNAVAILABLE", "DEEMED"],
      "type": "string",
      "description": "Receipt fetch status for a particular biller. Eg. AVAILABLE."
    },
    "biller": {
      "type": "object",
      "required": [
        "description",
        "logoURL",
        "customerParameters",
        "deemedEnabled",
        "receiptFetchStatus",
        "allowedPaymentInstruments"
      ],
      "x-go-name": "BillerAPIModel",
      "properties": {
        "productInstance": { "$ref": "#/definitions/productInstance" },
        "logoURL": {
          "type": "string",
          "description": "URL of the biller logo in PNG or SVG format."
        },
        "customerParameters": {
          "type": "array",
          "items": { "$ref": "#/definitions/billerCustomerParams" },
          "description": "List of parameters to identify a customer for the biller."
        },
        "partner": { "$ref": "#/definitions/partner" },
        "allowedPaymentInstruments": {
          "type": "array",
          "items": { "$ref": "#/definitions/paymentInstrument" },
          "description": "Instruments allowed for bill payment."
        },
        "receiptFetchStatus": { "$ref": "#/definitions/receiptFetchStatus" },
        "deemedEnabled": {
          "type": "boolean",
          "description": "Enable deemed payments for biller."
        },
        "description": {
          "type": "string",
          "description": "Description of the biller."
        },
        "category": {
          "type": "string",
          "description": "Category code the biller belongs to."
        }
      },
      "description": "Biller entity data"
    },
    "transactions": {
      "type": "object",
      "required": ["utr", "type", "amount", "platformBillID", "instrument"],
      "properties": {
        "utr": {
          "type": "string",
          "description": "Bank UTR for the bill payment/ refund made by/to the customer."
        },
        "type": { "$ref": "#/definitions/transactionType" },
        "amount": { "$ref": "#/definitions/amount" },
        "instrument": { "$ref": "#/definitions/paymentInstrument" },
        "platformBillID": {
          "type": "string",
          "description": "Unique identifier of bill in Setu."
        },
        "processingFees": { "$ref": "#/definitions/processingFees" }
      },
      "description": "Individual transaction details of the settlement made by the payment processor."
    },
    "additionalInfo": {
      "type": "object",
      "example": { "Expiry": "2021-07-08", "LoanNumber": "12345678" },
      "description": "additionalInfo is an object where you can pass any key, value—Setu will send it back in the payment successful notification."
    },
    "vPAPaymentAddress": {
      "type": "object",
      "properties": {
        "upiID": {
          "type": "string",
          "example": "setu-358715582872290627@setubank",
          "description": "UPI identifier"
        },
        "upiLink": {
          "type": "string",
          "example": "upi://pay?pa=setu-358715582872290627@setubank&pn=Setu&am=1&cu=INR",
          "description": "Account Number"
        },
        "shortURL": {
          "type": "string",
          "example": "setu.co/1asd213",
          "description": "Account Number"
        }
      }
    },
    "amountObject": {
      "type": "object",
      "required": ["displayName", "amount"],
      "properties": {
        "amount": { "$ref": "#/definitions/amount" },
        "displayName": {
          "type": "string",
          "description": "Display name for the amount field."
        }
      }
    },
    "paymentBase": {
      "type": "object",
      "required": ["amount", "sourceAccount", "destinationAccount"],
      "x-go-name": "DummyBankPaymentBaseAPIModel",
      "properties": {
        "type": { "$ref": "#/definitions/baseType" },
        "amount": {
          "type": "number",
          "format": "double",
          "description": "Amount for the mock credit."
        },
        "sourceAccount": { "$ref": "#/definitions/bankAccount" },
        "destinationAccount": { "$ref": "#/definitions/bankAccount" }
      }
    },
    "billRecurrence": {
      "enum": [
        "ONE_TIME",
        "DAILY",
        "WEEKLY",
        "FORTNIGHTLY",
        "MONTHLY",
        "QUARTERLY",
        "HALF_YEARLY",
        "YEARLY",
        "AS_PRESENTED"
      ],
      "type": "string",
      "description": "Bill recurrence type."
    },
    "settlementParts": {
      "type": "object",
      "required": ["account"],
      "properties": {
        "split": { "$ref": "#/definitions/settlementSplit" },
        "account": { "$ref": "#/definitions/settlementAccount" },
        "remarks": {
          "type": "string",
          "description": "Remarks if any for this split transaction."
        }
      },
      "description": "Part of the bill which has to be split and settled."
    },
    "amount": {
      "type": "object",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "number",
          "format": "int",
          "description": "Amount value in the smallest subunit of the currency. If a currency has two or more subunits, use the smallest one. For example, For INR it would be paisa, and for Yen, which has two subunits sen(1/100) and rin(1/1000), it would be rin."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency code of the amount, in the ISO-4217 standard."
        }
      }
    },
    "fetchBillReceiptResponse": {
      "type": "object",
      "required": ["receipt"],
      "properties": { "receipt": { "$ref": "#/definitions/billReceipt" } }
    },
    "billerCustomerParams": {
      "type": "object",
      "required": [
        "displayName",
        "attributeName",
        "dataType",
        "isMandatory",
        "minLength",
        "maxLength"
      ],
      "x-go-name": "BillerCustomerParamsAPIModel",
      "properties": {
        "dataType": {
          "type": "string",
          "description": "Data type for the field which needs to be used in validation."
        },
        "maxLength": {
          "type": "integer",
          "description": "Maximum length of the parameter."
        },
        "minLength": {
          "type": "integer",
          "description": "Minimum length of the parameter."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the biller."
        },
        "isMandatory": {
          "type": "boolean",
          "description": "Defines if a particular parameter must be passed."
        },
        "attributeName": {
          "type": "string",
          "description": "Attribute name to be passed in the fetch bill request."
        }
      },
      "description": "Specifications of each customer parameter."
    },
    "transactionType": {
      "enum": ["PAYMENT", "REFUND"],
      "type": "string",
      "description": "Transaction type for a bill."
    },
    "billBase": {
      "type": "object",
      "required": [
        "customerAccount",
        "billType",
        "recurrence",
        "billerBillID",
        "amountExactness",
        "aggregates"
      ],
      "x-go-name": "BillBaseAPIModel",
      "properties": {
        "items": {
          "type": "array",
          "items": { "$ref": "#/definitions/items" },
          "description": "Contains individual line items for the bill."
        },
        "billType": { "$ref": "#/definitions/billType" },
        "dueDate": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "Due date of the bill in the ISO 8601 format, upto seconds precision.",
          "x-omitempty": false
        },
        "fees": {
          "type": "array",
          "items": { "$ref": "#/definitions/fees" },
          "description": "An array containing bill-level additional costs, such as \"Delivery fees\" or \"Late charges\"."
        },
        "generatedOn": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "description": "Creation date of the bill in the ISO 8601 format, upto seconds precision.",
          "x-omitempty": false
        },
        "customerAccount": { "$ref": "#/definitions/customerAccount" },
        "recurrence": { "$ref": "#/definitions/billRecurrence" },
        "billerCategory": {
          "type": "string",
          "description": "Category of the bill."
        },
        "discounts": {
          "type": "array",
          "items": { "$ref": "#/definitions/discount" },
          "description": "Contains the discounts on the bill."
        },
        "aggregates": { "$ref": "#/definitions/billAggregates" },
        "additionalInfo": {
          "type": "object",
          "description": "Additional information which is specific to that bill type."
        },
        "billerBillID": {
          "type": "string",
          "description": "Unique bill identifier provided by the biller. For GST, it is the CPIN."
        },
        "taxes": {
          "type": "array",
          "items": { "$ref": "#/definitions/billTax" },
          "description": "Contains the taxes on the bill."
        },
        "billerActorID": {
          "type": "string",
          "description": "Unique identifier of the biller actor."
        },
        "amountExactness": { "$ref": "#/definitions/amountExactness" },
        "customer": { "$ref": "#/definitions/billCustomer" },
        "validationRules": { "$ref": "#/definitions/validationRules" }
      }
    },
    "itemTax": {
      "type": "object",
      "required": ["displayName", "amount"],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of tax component levied."
        },
        "amount": { "$ref": "#/definitions/amount" },
        "components": {
          "type": "array",
          "items": { "$ref": "#/definitions/taxComponent" },
          "description": "Parent object containing the breakdown of individual tax components at the item level."
        },
        "computation": { "$ref": "#/definitions/computation" },
        "displayName": {
          "type": "string",
          "description": "Display name for the item tax applied on the particular item."
        }
      },
      "description": "Tax parent object containing all the relevant taxes and their individual components at the item-level."
    },
    "partnerDetails": {
      "type": "object",
      "required": ["appID", "productInstanceID"],
      "properties": {
        "appID": {
          "type": "string",
          "description": "Unique identifier for the app."
        },
        "productInstanceID": {
          "type": "string",
          "description": "Unique identifier for the product instance."
        }
      },
      "description": "Details about the partner."
    },
    "feeAggregates": {
      "type": "object",
      "required": ["total"],
      "properties": {
        "tax": { "$ref": "#/definitions/amount" },
        "total": { "$ref": "#/definitions/amount" },
        "discount": { "$ref": "#/definitions/amount" },
        "subTotal": { "$ref": "#/definitions/amount" }
      },
      "description": "Aggregate section for fees"
    },
    "platformBill": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/billBase" }],
      "required": [
        "platformBillID",
        "name",
        "paymentAddresses",
        "platformBillStatus",
        "deemedBillStatus"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name of bill."
        },
        "receipt": { "$ref": "#/definitions/billReceiptWithStatus" },
        "platformBillID": {
          "type": "string",
          "description": "Unique identifier of bill in Setu."
        },
        "deemedBillStatus": { "$ref": "#/definitions/setuBillDeemedStatus" },
        "paymentAddresses": {
          "type": "array",
          "items": { "$ref": "#/definitions/paymentAddress" },
          "description": "Payment addresses such as a VAN or a VPA to which the funds to pay the bill needs to be sent."
        },
        "platformBillStatus": { "$ref": "#/definitions/setuBillStatus" }
      },
      "description": "Bill entity data."
    },
    "billerCustomerIdentifier": {
      "type": "object",
      "allOf": [{ "$ref": "#/definitions/customerIdentifier" }],
      "x-go-name": "BillerCustomerIdentifierAPIModel"
    },
    "billAggregates": {
      "type": "object",
      "required": ["total"],
      "properties": {
        "fee": { "$ref": "#/definitions/amountObject" },
        "tax": { "$ref": "#/definitions/amountObject" },
        "total": { "$ref": "#/definitions/amountObject" },
        "discount": { "$ref": "#/definitions/amountObject" },
        "subTotal": { "$ref": "#/definitions/amountObject" },
        "itemQuantity": { "$ref": "#/definitions/itemQuantity" }
      },
      "description": "Contains bill-level aggregates of individual data points. For example \"Total number of items\" is an aggregate."
    },
    "settlementAggregates": {
      "type": "object",
      "required": ["total", "payment", "refund"],
      "properties": {
        "total": { "$ref": "#/definitions/transactionCount" },
        "refund": { "$ref": "#/definitions/transactionTotal" },
        "payment": { "$ref": "#/definitions/transactionTotal" }
      },
      "description": "Aggregates section for settlement."
    },
    "fetchBillsRequest": {
      "type": "object",
      "required": ["billerProductInstanceID", "customerIdentifiers"],
      "properties": {
        "customerIdentifiers": {
          "type": "array",
          "items": { "$ref": "#/definitions/billerCustomerIdentifier" },
          "description": "Used to validate the customer account and fetch the bill details."
        },
        "billerProductInstanceID": {
          "type": "string",
          "description": "Unique identifier of the biller product instance in Setu."
        }
      },
      "description": "Fetch bill request payload"
    },
    "amountExactness": {
      "enum": ["ANY", "EXACT", "EXACT_UP", "EXACT_DOWN", "RANGE"],
      "type": "string",
      "description": "Exactness of the bill amount. \"ANY\" means customer can pay any amount. \"EXACT\" means customer can pay only the amount specified in the bill. \"EXACT_UP\" means customer must pay at least the specified amount or more, and \"EXACT_DOWN\" means customer can pay any amount upto the specified amount. \"RANGE\" means the customer can pay any amount between amountMin and amountMax specified in the validationRules."
    },
    "itemQuantity": {
      "type": "object",
      "required": ["quantity", "displayName"],
      "properties": {
        "quantity": {
          "type": "integer",
          "description": "Total number of items in the bill."
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the quantity on payers app."
        }
      }
    },
    "billFulfilmentRequest": {
      "type": "object",
      "required": ["transactionID", "payment"],
      "x-go-name": "BillFulfilmentRequestAPIModel",
      "properties": {
        "payment": { "$ref": "#/definitions/fulfilmentPaymentDetails" },
        "transactionID": {
          "type": "string",
          "example": "201905161605011233",
          "description": "Unique transaction reference ID for a payment in the payer app system"
        }
      },
      "description": "Specifications of the bill fulfilment request."
    },
    "callbackEventCreateRequest": {
      "type": "object",
      "required": ["eventUID", "eventType", "eventTimeStamp", "eventData"],
      "x-go-name": "CallbackRequestAPIModel",
      "properties": {
        "eventUID": {
          "type": "string",
          "description": "Unique identifier for an event."
        },
        "eventData": {
          "type": "object",
          "description": "Payload of an event which contains detailed information about an event."
        },
        "eventType": {
          "type": "string",
          "description": "The type of event specific to a product."
        },
        "eventTimeStamp": {
          "type": "integer",
          "description": "The time at which an event occured."
        }
      }
    },
    "customer": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the customer in the biller system."
        },
        "additionalInfo": {
          "type": "object",
          "description": "Additional details of the customer in the biller system."
        }
      },
      "description": "Details of a customer in the biller system."
    },
    "validationRules": {
      "type": "object",
      "properties": { "amount": { "$ref": "#/definitions/amountValidation" } },
      "description": "Bill validation rules"
    },
    "charges": {
      "type": "object",
      "required": ["amount", "percentage", "flatFee", "type"],
      "properties": {
        "type": { "$ref": "#/definitions/chargeType" },
        "amount": { "$ref": "#/definitions/amount" },
        "flatFee": {
          "type": "string",
          "example": "4",
          "description": "FlatFee value for charge calculation."
        },
        "percentage": {
          "type": "string",
          "example": "18",
          "description": "Percentage value for charge calculation."
        }
      }
    },
    "billSettlementRequest": {
      "type": "object",
      "required": ["settlement"],
      "x-go-name": "BillSettlementRequestAPIModel",
      "properties": {
        "settlement": { "$ref": "#/definitions/billSettlementDetails" }
      },
      "description": "Specifications of the bill settlement request."
    }
  },
  "host": "uat.setu.co",
  "swagger": "2.0",
  "info": {
    "title": "Setu Collect APIs",
    "version": "1.0.0",
    "description": "<a href=\"http://docs.setu.co/\" target=\"_blank\">Setu Collect Documentation ↗</a>\n"
  },
  "paths": {
    "/utilities/bills/settlement": {
      "post": {
        "tags": ["bbps-integration-payer"],
        "summary": "Settle bill payments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }]
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "body",
            "name": "billSettlement",
            "schema": { "$ref": "#/definitions/billSettlementRequest" },
            "required": true,
            "description": "Input parameters for Bill Settlement."
          }
        ],
        "description": "Used by a payment processor to settle bill payments.",
        "operationId": "billSettlement"
      }
    },
    "/auth/token": {
      "post": {
        "tags": ["Auth"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/fetchTokenResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "fetchTokenPayload",
            "schema": { "$ref": "#/definitions/fetchTokenRequest" },
            "required": true,
            "description": "ClientID from the API key pair"
          }
        ],
        "description": "Fetch token to be used to authorize all Setu APIs",
        "operationId": "fetchToken"
      }
    },
    "/payment-links": {
      "post": {
        "tags": ["Billers", "upi-deep-links"],
        "summary": "Create a payment link",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/createPaymentLinkResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "body",
            "name": "paymentLinkRequest",
            "schema": { "$ref": "#/definitions/createPaymentLinkRequest" },
            "required": true,
            "description": "Input parameters for creating a payment link."
          }
        ],
        "operationId": "paymentLink"
      }
    },
    "/utilities/bills/fetch": {
      "post": {
        "tags": ["bbps-integration-payer"],
        "summary": "Fetch outstanding bills",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/fetchBillsResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "body",
            "name": "fetchBillsRequest",
            "schema": { "$ref": "#/definitions/fetchBillsRequest" },
            "required": true,
            "description": "Input parameters for Fetch bill."
          }
        ],
        "description": "Returns a list of bills for a given customer account.",
        "operationId": "fetchBills"
      }
    },
    "/<partner-base-api-url>/bills/fetchReceipt": {
      "post": {
        "tags": ["bbps-integration-biller"],
        "summary": "Acknowledge payment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/fetchBillReceiptResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "fetchBillReceiptAfterPayment",
            "schema": { "$ref": "#/definitions/fetchReceiptRequest" },
            "required": true,
            "description": "Input parameters for fetching a bill."
          }
        ],
        "description": "Used to validate the customer and fetch bill details.",
        "operationId": "fetchBillReceipt"
      }
    },
    "/utilities/bills/{platformBillId}": {
      "get": {
        "tags": ["bbps-integration-biller", "bbps-integration-payer"],
        "summary": "Get bill with id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": { "$ref": "#/definitions/platformBill" }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "path",
            "name": "platformBillId",
            "type": "string",
            "required": true,
            "description": "The unique identifier for a bill in Setu."
          }
        ],
        "description": "Returns a bill for supplied unique Setu bill ID.",
        "operationId": "getBillWithID"
      }
    },
    "/<partner-base-api-url>/notifications": {
      "post": {
        "tags": [
          "bbps-integration-biller",
          "bbps-integration-payer",
          "upi-deep-links-events"
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }]
            },
            "description": "If the payment is successful"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "notificationRequest",
            "schema": { "$ref": "#/definitions/notificationRequest" },
            "required": true,
            "description": "Input parameters containing notification data. For example payloads see https://docs.setu.co/notifications#notification-events"
          }
        ],
        "operationId": "notification"
      }
    },
    "/triggers/settlement/bill": {
      "post": {
        "tags": ["Internals"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }]
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "billSettlement",
            "schema": {
              "$ref": "#/definitions/triggerBillSettlementRequest"
            },
            "required": true,
            "description": "Input parameters for requesting a bank account credit."
          },
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          }
        ],
        "operationId": "triggerBillSettlement"
      }
    },
    "/utilities/bills/billers": {
      "get": {
        "tags": ["bbps-integration-payer"],
        "summary": "Fetch biller list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/fetchBillersResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          }
        ],
        "operationId": "getBillers"
      }
    },
    "/utilities/bills/{platformBillId}/expire": {
      "post": {
        "tags": ["Bills"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }]
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "path",
            "name": "platformBillId",
            "type": "string",
            "required": true,
            "description": "The unique identifier for a bill in Setu."
          }
        ],
        "description": "Used to expire a bill.",
        "operationId": "expireBill"
      }
    },
    "/reports": {
      "post": {
        "tags": ["bbps-integration-biller", "upi-deep-links-reports"],
        "summary": "Retreive reports",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": { "$ref": "#/definitions/getReportResponse" }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "body",
            "name": "GetReportRequest",
            "schema": { "$ref": "#/definitions/getReportRequest" },
            "required": true,
            "description": "Input parameters for Get Report."
          }
        ],
        "description": "Used to retreive a report from the Setu system.",
        "operationId": "getReport"
      }
    },
    "/utilities/billers/bills/{billerBillId}": {
      "get": {
        "tags": ["bbps-integration-biller", "bbps-integration-payer"],
        "summary": "Get bill with biller bill ID",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/billWithBillerBillIdResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "path",
            "name": "billerBillId",
            "type": "string",
            "required": true,
            "description": "The unique identifier for a bill on the biller's system."
          },
          {
            "in": "query",
            "enum": [
              "CREATED",
              "WAITING_FOR_CREDIT",
              "CREDIT_RECEIVED",
              "SETTLEMENT_PENDING",
              "SETTLED",
              "EXPIRED",
              "PAYMENT_ACK"
            ],
            "name": "status",
            "type": "string",
            "description": "Current status of bill in Setu."
          }
        ],
        "description": "Returns a list of bills for the supplied Biller bill ID.",
        "operationId": "getBillWithBillerBillID"
      }
    },
    "/<partner-base-api-url>/bills/fetch": {
      "post": {
        "tags": ["bbps-integration-biller"],
        "summary": "Respond to bill fetch",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/billerFetchBillsResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "fetchBillandValidateCustomer",
            "schema": { "$ref": "#/definitions/billerFetchBillsRequest" },
            "required": true,
            "description": "Input parameters for fetching a bill"
          }
        ],
        "description": "Used to validate the customer account and fetch the bill details.",
        "operationId": "fetchCustomerBills"
      }
    },
    "/triggers/funds/addCredit": {
      "post": {
        "tags": ["upi-deep-links-test-integration"],
        "summary": "Trigger mock payment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Success" },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "addCreditToAccountTriggerRequest",
            "schema": { "$ref": "#/definitions/paymentBase" },
            "required": true,
            "description": "Input parameters for requesting a bank account credit."
          }
        ],
        "description": "Used to trigger a mock credit for testing purposes. You can use this in your sandbox to test your integration. This is not available in production.",
        "operationId": "addCredit"
      }
    },
    "/utilities/bills/{platformBillId}/fulfilment": {
      "post": {
        "tags": ["bbps-integration-payer"],
        "summary": "Request bill payment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/billFulfilmentResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "404": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Resource not found"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "path",
            "name": "platformBillId",
            "type": "string",
            "required": true,
            "description": "The unique identifier for a bill in Setu."
          },
          {
            "in": "body",
            "name": "billFulfilment",
            "schema": { "$ref": "#/definitions/billFulfilmentRequest" },
            "required": true,
            "description": "Input parameters for Bill Fulfilment."
          }
        ],
        "description": "Used to fulfill a bill payment.",
        "operationId": "billFulfilment"
      }
    },
    "/payment-links/{platformBillID}": {
      "get": {
        "tags": ["Billers", "upi-deep-links"],
        "summary": "Check payment status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": {
                  "$ref": "#/definitions/paymentLinkStatusResponse"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "path",
            "name": "platformBillID",
            "type": "string",
            "required": true,
            "description": "The unique identifier for a payment link in Setu."
          }
        ],
        "description": "Returns the status of the payment for the supplied bill id.",
        "operationId": "paymentStatus"
      }
    },
    "/callbacks": {
      "post": {
        "tags": ["Callbacks"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "allOf": [{ "$ref": "#/definitions/baseResponse" }],
              "required": ["data"],
              "properties": {
                "data": { "$ref": "#/definitions/callbackresponse" }
              }
            },
            "description": "Success"
          },
          "400": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Malformed request"
          },
          "401": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthenticated request"
          },
          "403": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unauthorised request"
          },
          "405": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "HTTP method not allowed"
          },
          "429": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Too many requests"
          },
          "500": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Unable to fulfil request"
          },
          "503": {
            "schema": { "$ref": "#/definitions/errorResponse" },
            "description": "Server under maintenance"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "X-Setu-Product-Instance-ID",
            "type": "string",
            "required": true,
            "description": "Identifier for product instance. Required for authorisation."
          },
          {
            "in": "body",
            "name": "callbackEventCreateRequest",
            "schema": { "$ref": "#/definitions/callbackEventCreateRequest" },
            "required": true,
            "description": "Input parameters for a callback request."
          }
        ],
        "operationId": "createCallbackEvent"
      }
    }
  },
  "schemes": ["https"],
  "basePath": "/api",
  "tags": [
    {
      "name": "upi-deep-links-events",
      "description": "Notifications are pushed to `<Callback URL>/notifications`. A partner can listen to this endpoint and consume notification requests.\n",
      "x-displayName": "Notifications"
    },
    { "name": "upi-deep-links-reports", "x-displayName": "Reports" },
    {
      "name": "upi-deep-links-test-integration",
      "x-displayName": "Testing integration"
    },
    { "name": "upi-deep-links", "x-displayName": "APIs to Call" },
    {
      "name": "Billers",
      "description": "A collection of APIs for billers to implement."
    },
    {
      "name": "Notifications",
      "description": "A collection of APIs Setu uses to notify developer partners."
    }
  ],
  "x-tagGroups": [
    {
      "name": "UPI Deep Links",
      "tags": [
        "upi-deep-links-test-integration",
        "upi-deep-links-events",
        "upi-deep-links-reports",
        "upi-deep-links"
      ]
    }
  ]
}
