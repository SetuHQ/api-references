{
  "info": {
    "title": "Axis fastag",
    "x-logo": {
      "url": "https://setu-customer-success.s3.ap-south-1.amazonaws.com/icons/axis-small.svg",
      "altText": "Axis setu logo"
    },
    "version": "1.0.0",
    "description": "Fastag docs\n\nProcess flow:\n\n![](https://i.imgur.com/ztxvtVm.png)\n"
  },
  "paths": {
    "/generate-otp": {
      "post": {
        "tags": ["KYC"],
        "summary": "Otp Generate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpGenerateResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisAgentId" },
          { "$ref": "#/components/parameters/AxisProductId" }
        ],
        "operationId": "generateOtp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpGenerateRequest"
              }
            }
          },
          "required": true,
          "description": "This API is to be used to start min KYC for a wallet by doing an OTP."
        }
      }
    },
    "/vehicle-status": {
      "post": {
        "tags": ["Miscellaneous"],
        "summary": "Vehicle Status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleStatusResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "vehicleStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleStatusRequest"
              }
            }
          },
          "required": true,
          "description": "This API can be used to check if a vehicle is registed and if it is active on NPCI."
        }
      }
    },
    "/validate-otp": {
      "post": {
        "tags": ["KYC"],
        "summary": "Otp Validation API",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpValidateResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisAgentId" },
          { "$ref": "#/components/parameters/AxisProductId" }
        ],
        "operationId": "validateOtp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpValidateRequest"
              }
            }
          },
          "required": true,
          "description": "This API is to be used to validate the OTP received by the customer."
        }
      }
    },
    "/wallet-creation": {
      "post": {
        "tags": ["Issuance"],
        "summary": "Wallet Creation",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletCreationResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "createWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletCreateRequest"
              }
            }
          },
          "required": true,
          "description": "This API can be used to create a wallet, add a tag and assign a tag to a vehicle.\n"
        }
      }
    },
    "/tag-operation": {
      "post": {
        "tags": ["Issuance"],
        "summary": "Tag operations",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOperationResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "tagOperation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagOperationRequest"
              }
            }
          },
          "required": true,
          "description": "This API can be used to activate, deactivate or close a tag"
        }
      }
    },
    "/recharge-status": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Recharge Status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RechargeStatusResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "rechargeEnquiry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeStatusRequest"
              }
            }
          },
          "required": true,
          "description": "This API is used to check the actual status of the recharge."
        }
      }
    },
    "/tag-reissuance": {
      "post": {
        "tags": ["Issuance"],
        "summary": "Tag reissuance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagReissuanceResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "reissuance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagReissuanceRequest"
              }
            }
          },
          "required": true,
          "description": "This API can be used to reissue a damaged/lost tag\n"
        }
      }
    },
    "/dedupe": {
      "post": {
        "tags": ["Issuance"],
        "summary": "Customer Dedupe",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DedupeResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisAgentId" },
          { "$ref": "#/components/parameters/AxisProductId" }
        ],
        "operationId": "dedupe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DedupeRequest" }
            }
          },
          "required": true,
          "description": "This API can be used to check if a customer already exists in Axis database"
        }
      }
    },
    "/recharge": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Recharge",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RechargeResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "rechargeRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeRequest"
              }
            }
          },
          "required": true,
          "description": "This API is used to perform a recharge."
        }
      }
    },
    "/wallet-status": {
      "post": {
        "tags": ["Issuance"],
        "summary": "Wallet Creation Status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletStatusResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "walletCreationStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DedupeRequest" }
            }
          },
          "required": true,
          "description": "This API should be polled to see if wallet creation is successful."
        }
      }
    },
    "/wallet-balance": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Wallet Balance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletBalanceResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "walletBalance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletBalanceRequest"
              }
            }
          },
          "required": true,
          "description": "This API gives details about balance of a wallet."
        }
      }
    },
    "/toll-transactions": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Toll Transactions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TollTxnResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "tollTransactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TollTxnRequest" }
            }
          },
          "required": true,
          "description": "Get detailed debit transaction details"
        }
      }
    },
    "/wallet-transactions": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Wallet Transactions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTxnResponse"
                }
              }
            },
            "description": "Response"
          }
        },
        "parameters": [
          { "$ref": "#/components/parameters/AxisChannelId" },
          { "$ref": "#/components/parameters/AxisClientId" },
          { "$ref": "#/components/parameters/AxisClientSecret" },
          { "$ref": "#/components/parameters/AxisEncryptionKey" },
          { "$ref": "#/components/parameters/AxisSaltKey" },
          { "$ref": "#/components/parameters/AxisMerchantId" },
          { "$ref": "#/components/parameters/AxisPosNumber" },
          { "$ref": "#/components/parameters/AxisProductId" },
          { "$ref": "#/components/parameters/AxisAgentId" }
        ],
        "operationId": "walletTransactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletTxnRequest"
              }
            }
          },
          "required": true,
          "description": "Get a list of transactions against a wallet."
        }
      }
    }
  },
  "openapi": "3.0.0",
  "servers": [
    { "url": "https://fastag-api.setu.co/api/mock/" },
    { "url": "https://fastag-api.setu.co/api/uat/" },
    { "url": "https://fastag-api.setu.co/api/prod/" }
  ],
  "components": {
    "schemas": {
      "TollTxnRequest": {
        "required": ["startDate", "endDate", "walletId", "limit", "offset"],
        "properties": {
          "limit": {
            "type": "string",
            "example": "1",
            "description": "the number of results to limit in this query. Max is 100"
          },
          "offset": {
            "type": "string",
            "example": "1",
            "description": "Number of rows to skip"
          },
          "endDate": {
            "type": "string",
            "example": "2020-07-07",
            "description": "The end date you want filter by in YYYY-MM-DD"
          },
          "walletId": {
            "type": "string",
            "example": "19000009651916",
            "description": "The wallet ID"
          },
          "startDate": {
            "type": "string",
            "example": "2019-01-01",
            "description": "The start date you want to filter by YYYY-MM-DD"
          }
        }
      },
      "OtpGenerateResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "required": ["otpReferenceId"],
            "properties": {
              "otpReferenceId": {
                "type": "string",
                "example": "9TFUZBA4UW",
                "description": "The reference ID to be used while submitting the OTP"
              }
            }
          },
          "statusCode": {
            "enum": ["invalid-mobile-number", "success"],
            "type": "string",
            "example": "success"
          },
          "statusMessage": { "type": "string", "example": "API is successful" }
        }
      },
      "OtpValidateResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": { "type": "object", "properties": {} },
          "statusCode": {
            "enum": ["invalid-otp", "success"],
            "type": "string",
            "example": "invalid-otp"
          },
          "statusMessage": { "type": "string", "example": "Invalid OTP" }
        }
      },
      "TagOperationRequest": {
        "required": ["walletId", "vehicleNumber", "operation"],
        "properties": {
          "walletId": {
            "type": "string",
            "example": "19000009653984",
            "description": "The reference ID that was given in the response of generate OTP API"
          },
          "operation": {
            "enum": ["ACTIVATE", "DEACTIVATE", "CLOSE"],
            "type": "string",
            "description": "the operation"
          },
          "vehicleNumber": {
            "type": "string",
            "example": "KA12AB5618",
            "description": "The vehicle number"
          }
        }
      },
      "WalletBalanceResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "balance",
              "odBalance",
              "sdbalance",
              "thresholdAmount",
              "unclearBalance"
            ],
            "properties": {
              "balance": {
                "type": "string",
                "example": "5000.00",
                "description": "The wallet balance"
              },
              "odBalance": {
                "type": "string",
                "example": "0.00",
                "description": "Overdraft balance. If you have 200 rupee balance and you do a 300 rupee toll txn, your OD balance 100. On recharge this amount is recovered first."
              },
              "sdbalance": {
                "type": "string",
                "example": "200.00",
                "description": "Security deposit balance."
              },
              "unclearBalance": {
                "type": "string",
                "example": "0.00",
                "description": "When you do recharge, money first goes into unclear balance. Once it is reconciled, it will be added to the wallet balance."
              },
              "thresholdAmount": {
                "type": "string",
                "example": "0.00",
                "description": "Balance below which tags will be put in low balance in NPCI mapper."
              }
            }
          },
          "statusCode": { "type": "string", "example": "000" }
        }
      },
      "TagReissuanceRequest": {
        "required": [
          "customer",
          "walletId",
          "document",
          "address",
          "tagDetails",
          "vehicle"
        ],
        "properties": {
          "address": {
            "type": "object",
            "required": ["city", "line", "state", "pinCode"],
            "properties": {
              "city": {
                "type": "string",
                "example": "Bangalore",
                "description": "The city of the customer"
              },
              "line": {
                "type": "string",
                "example": "829 Erica Spurs Apt. 457",
                "description": "The address line"
              },
              "state": {
                "type": "string",
                "example": "Karnataka",
                "description": "the state of the customer"
              },
              "pinCode": {
                "type": "string",
                "example": "571219",
                "description": "The pin code of the customer"
              }
            },
            "description": "The customer address. if `tagDetails.toBeShippedByBank` is `true`, tag would be shipped here."
          },
          "vehicle": {
            "type": "object",
            "required": ["chasisNumber", "isCommercial", "class", "number"],
            "properties": {
              "class": {
                "enum": [4, 5, 6, 7, 12, 15, 16],
                "type": "string",
                "example": "4",
                "description": "the vehicle class\n- 4 - \tCar / Jeep / Van/ Tata Ace and similar mini light commercial vehicle\n- 5\t- Light Commercial Vehicle\n- 6\t- Three Axle Commerical Vehile\n- 7\t- Bus/Truck\n- 12 -\t4 to 6 Axle\n- 15 -\t7 or more Axle\n- 16 - \tHeavy Construction Machinery (HCM) / Earth Moving Equipment (EME)\n"
              },
              "number": {
                "type": "string",
                "example": "KA12AB5618",
                "description": "Vehicle number in all capitals, no spaces. eg - `KA12AB5618`"
              },
              "chasisNumber": {
                "type": "string",
                "example": "1M8GDM9AKP042788",
                "description": "The chasis number of the vehicle"
              },
              "isCommercial": {
                "type": "boolean",
                "example": false,
                "description": "Is this a commercial vehicle?"
              }
            }
          },
          "customer": {
            "type": "object",
            "required": [
              "firstName",
              "mobile",
              "lastName",
              "dob",
              "gender",
              "email"
            ],
            "properties": {
              "dob": {
                "type": "string",
                "example": "1997-02-21",
                "description": "Date of birth in YYYY-MM-DD"
              },
              "email": {
                "type": "string",
                "example": "anthonysmith@hotmail.com",
                "description": "the email of the customer"
              },
              "gender": {
                "enum": ["M", "F"],
                "type": "string",
                "example": "M",
                "description": "the gender of the customer. `M` and `F`"
              },
              "mobile": {
                "type": "string",
                "example": "8384375964",
                "description": "Mobile number of the customer"
              },
              "lastName": {
                "type": "string",
                "example": "Warren",
                "description": "Last name of the customer"
              },
              "firstName": {
                "type": "string",
                "example": "Judith",
                "description": "Firt name of the customer"
              }
            }
          },
          "document": {
            "type": "object",
            "required": ["type", "number"],
            "properties": {
              "type": {
                "enum": ["PAN", "AADHAR"],
                "type": "string",
                "example": "PAN",
                "description": "the document type"
              },
              "number": {
                "type": "string",
                "example": "ABCDE1111A",
                "description": "The document ID. For example PAN or Aadhar number"
              }
            },
            "description": "The document  details. BC needs to collect these details from the user and store on their side."
          },
          "walletId": {
            "type": "string",
            "example": "19000009653984",
            "description": "The wallet ID"
          },
          "tagDetails": {
            "type": "object",
            "required": ["toBeShippedByBank", "sequence"],
            "properties": {
              "sequence": {
                "type": "string",
                "example": "20923079",
                "description": "if `toBeShippedByBank` is `false` provide the tag sequence number you already have with you. this is preprovisioned by the bank and given to you."
              },
              "toBeShippedByBank": {
                "type": "boolean",
                "example": true,
                "description": "Should the bank be shipping the tag?"
              }
            }
          }
        }
      },
      "RechargeResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": { "type": "object" },
          "statusCode": {
            "enum": [
              "submitted",
              "invalid-wallet-id",
              "recharge-failed",
              "ref-id-not-valid",
              "ref-id-not-unique"
            ],
            "type": "string",
            "example": "submitted"
          },
          "statusMessage": {
            "type": "string",
            "example": "Recharge requet is submitted. Please check the status enquiry API."
          }
        }
      },
      "RechargeRequest": {
        "required": ["walletId", "amount", "referenceId"],
        "properties": {
          "amount": {
            "type": "string",
            "example": "100",
            "description": "The Amount to be recharged"
          },
          "walletId": {
            "type": "string",
            "example": "19000009653881",
            "description": "The wallet ID to be recharged"
          },
          "referenceId": {
            "type": "string",
            "example": "9091233441",
            "description": "The ref ID of the txn in BC system"
          }
        }
      },
      "DedupeRequest": {
        "required": ["customer", "vehicleNumber"],
        "properties": {
          "customer": {
            "type": "object",
            "required": ["firstName", "lastName", "mobile", "dob"],
            "properties": {
              "dob": {
                "type": "string",
                "example": "1974-10-29",
                "description": "date of birth of the customer"
              },
              "mobile": {
                "type": "string",
                "example": "8162829412",
                "description": "mobile number of the customer"
              },
              "lastName": {
                "type": "string",
                "example": "Shaw",
                "description": "last name of the customer"
              },
              "firstName": {
                "type": "string",
                "example": "Laura",
                "description": "First name of the customer"
              }
            },
            "description": "The information about the customer"
          },
          "vehicleNumber": {
            "type": "string",
            "example": "GJ85AB7602",
            "description": "the vehicle number of the customer"
          }
        }
      },
      "DedupeResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "walletId": {
                "type": "string",
                "example": "19000009653983",
                "description": "If the wallet is found this would be returned"
              }
            }
          },
          "statusCode": {
            "enum": [
              "registered-customer-and-vehicle",
              "vehicle-already-registered",
              "not-found"
            ],
            "type": "string",
            "example": "registered-customer-and-vehicle",
            "description": "the statusCode outlining the status of the API"
          },
          "statusMessage": {
            "type": "string",
            "example": "Customer and vehicle are already registered",
            "description": "Description of the status code"
          }
        }
      },
      "TagReissuanceResponse": {
        "required": ["statusCode", "statusMessage"],
        "properties": {
          "statusCode": {
            "enum": [
              "registered-customer-and-vehicle",
              "invalid-mobile-number",
              "success",
              "invalid-topup-amount",
              "invalid-deposit-amount",
              "invalid-tax-amount",
              "vehicle-already-registered",
              "invalid-issuance-amount",
              "not-found",
              "mobile-already-exists",
              "duplicate-creation-request",
              "invalid-tag-seq-number"
            ],
            "type": "string",
            "example": "success"
          },
          "statusMessage": {
            "type": "string",
            "example": "This operation is successful"
          }
        }
      },
      "WalletBalanceRequest": {
        "required": ["walletId"],
        "properties": {
          "walletId": {
            "type": "string",
            "example": "19000009653885",
            "description": "Wallet ID"
          }
        }
      },
      "WalletStatusResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "required": ["walletId"],
            "properties": {
              "walletId": {
                "type": "string",
                "example": "19000009653984",
                "description": "The ID of the wallet"
              }
            }
          },
          "statusCode": {
            "enum": [
              "registered-customer-and-vehicle",
              "invalid-mobile-number",
              "success",
              "invalid-topup-amount",
              "vehicle-already-registered",
              "invalid-issuance-amount",
              "invalid-deposit-amount",
              "not-found",
              "mobile-already-exists",
              "duplicate-creation-request"
            ],
            "type": "string",
            "example": "wallet-creation-successful"
          },
          "statusMessage": {
            "type": "string",
            "example": "Wallet is successfully created"
          }
        }
      },
      "OtpValidateRequest": {
        "required": ["otpReferenceId", "otp"],
        "properties": {
          "otp": {
            "type": "string",
            "example": "9090",
            "description": "The OTP of the customer"
          },
          "otpReferenceId": {
            "type": "string",
            "example": "OBG4YIFYVF",
            "description": "The reference ID that was given in the response of generate OTP API"
          }
        }
      },
      "TagOperationResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": { "type": "object", "properties": {} },
          "statusCode": {
            "enum": [
              "invalid-channel-id",
              "tag-not-found",
              "tag-is-already-closed",
              "tag-is-already-active",
              "tag-is-already-inactive",
              "wallet-not-found",
              "success"
            ],
            "type": "string",
            "example": "invalid-channel-id"
          },
          "statusMessage": {
            "type": "string",
            "example": "Wallet/Tag is not issued by this channel"
          }
        }
      },
      "OtpGenerateRequest": {
        "required": ["mobile"],
        "properties": {
          "mobile": {
            "type": "string",
            "example": "8384317596",
            "description": "10 digit mobile number"
          }
        }
      },
      "TollTxnResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tollTransactionReference": {
                  "type": "string",
                  "example": "000000000000153txn2606`"
                },
                "avcClass": { "type": "string", "example": "VC13" },
                "vehicleClass": { "type": "string", "example": "VC4" },
                "status": { "type": "string", "example": "Reconciled" },
                "readerDateAndTime": {
                  "type": "string",
                  "example": "2020-06-24T12:30:00"
                },
                "walletId": {
                  "type": "string",
                  "example": "19000009651916 "
                },
                "vehicleNumber": { "type": "string", "example": "KA58AB3013" },
                "tagId": {
                  "type": "string",
                  "example": "34161FA820328A5209444D60"
                },
                "transactionAmount": { "type": "string", "example": "105.00" },
                "plazaName": { "type": "string", "example": "Rojwas" },
                "transactionType": { "type": "string", "example": "DEBIT" },
                "transactionDateAndTime": {
                  "type": "string",
                  "example": "2020-06-26T22:03:15"
                },
                "plazaCode": { "type": "string", "example": "345011" }
              }
            }
          },
          "statusCode": { "type": "string", "example": "success" },
          "statusMessage": { "type": "string", "example": "API is successful" }
        }
      },
      "VehicleStatusRequest": {
        "required": ["vehicleNumber"],
        "properties": {
          "vehicleNumber": {
            "type": "string",
            "example": "JK02JK1234",
            "description": "The vehicle number"
          }
        }
      },
      "WalletTxnResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "required": ["metadata", "transactions"],
            "properties": {
              "metadata": {
                "type": "object",
                "required": ["closingBalance", "count", "openingBalance"],
                "properties": {
                  "count": { "type": "number", "example": 23 },
                  "closingBalance": { "type": "number", "example": 19 },
                  "openingBalance": { "type": "number", "example": 9 }
                }
              },
              "transactions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "narration": {
                      "type": "string",
                      "example": "1/1634/290617/19000009653881"
                    },
                    "laneTransationTime": {
                      "type": "string",
                      "example": "2016-12-01T11:35:46"
                    },
                    "debit": {
                      "type": "string",
                      "example": "1.00"
                    },
                    "transactionDate": {
                      "type": "string",
                      "example": "2020-06-29T15:59:00"
                    },
                    "odAmount": {
                      "type": "string",
                      "example": "0.00"
                    },
                    "merchantName": {
                      "type": "string",
                      "example": "SETUNew"
                    },
                    "vehicleNumber": { "type": "string", "example": "" },
                    "credit": {
                      "type": "string",
                      "example": "1.00"
                    },
                    "balance": { "type": "number", "example": 19 }
                  }
                }
              }
            }
          },
          "statusCode": { "type": "string", "example": "success" },
          "statusMessage": { "type": "string", "example": "API is successful" }
        }
      },
      "RechargeStatusRequest": {
        "required": ["referenceId", "walletId"],
        "properties": {
          "walletId": {
            "type": "string",
            "example": "19000009653881",
            "description": "The Wallet ID"
          },
          "referenceId": {
            "type": "string",
            "example": "9091233441",
            "description": "The ref ID of the txn in BC system"
          }
        }
      },
      "WalletCreationResponse": {
        "required": ["statusCode", "statusMessage"],
        "properties": {
          "statusCode": {
            "enum": [
              "registered-customer-and-vehicle",
              "invalid-mobile-number",
              "success",
              "invalid-topup-amount",
              "invalid-deposit-amount",
              "invalid-tax-amount",
              "vehicle-already-registered",
              "invalid-issuance-amount",
              "not-found",
              "mobile-already-exists",
              "duplicate-creation-request",
              "invalid-tag-seq-number"
            ],
            "type": "string",
            "example": "success"
          },
          "statusMessage": {
            "type": "string",
            "example": "Wallet creation in progress, check status with status enquiry API"
          }
        }
      },
      "RechargeStatusResponse": {
        "required": ["statusCode", "statusMessage", "data"],
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "rechargeDateTime": {
                "type": "string",
                "example": "2020-08-20 13:12:00",
                "description": "The time at which wallet balance was updated."
              }
            }
          },
          "statusCode": {
            "enum": ["recharge-processing", "txn-number-not-found", "success"],
            "type": "string",
            "example": "recharge-processing"
          },
          "statusMessage": {
            "type": "string",
            "example": "Recharge is being processed",
            "description": "status message"
          }
        }
      },
      "WalletCreateRequest": {
        "required": [
          "customer",
          "wallet",
          "document",
          "address",
          "tagDetails",
          "vehicle",
          "cost",
          "kycType"
        ],
        "properties": {
          "cost": {
            "type": "object",
            "required": [
              "depositAmount",
              "topupAmount",
              "issuanceAmount",
              "taxAmount"
            ],
            "properties": {
              "taxAmount": {
                "type": "string",
                "example": "15.25",
                "description": "The tax on the issuance amount. This is fixed as preconfigured on the bank systems."
              },
              "topupAmount": {
                "type": "string",
                "example": "200",
                "description": "The amount to be added as the initial balance."
              },
              "depositAmount": {
                "type": "string",
                "example": "200.00",
                "description": "The deposit amount. This is fixed as preconfigured on the bank systems."
              },
              "issuanceAmount": {
                "type": "string",
                "example": "84.75",
                "description": "The issuance amount. This is fixed as preconfigured on the bank systems."
              }
            }
          },
          "wallet": {
            "type": "object",
            "required": ["addToExisting", "id"],
            "properties": {
              "id": {
                "type": "string",
                "example": "19000009653984",
                "description": "if `addToExisting` is `true`, then supply the wallet ID here"
              },
              "addToExisting": {
                "type": "boolean",
                "example": false,
                "description": "Should the new tag be added to an existing wallet"
              }
            }
          },
          "address": {
            "type": "object",
            "required": ["city", "line", "state", "pinCode"],
            "properties": {
              "city": {
                "type": "string",
                "example": "Bangalore",
                "description": "The city of the customer"
              },
              "line": {
                "type": "string",
                "example": "829 Erica Spurs Apt. 457",
                "description": "The address line"
              },
              "state": {
                "type": "string",
                "example": "Karnataka",
                "description": "the state of the customer"
              },
              "pinCode": {
                "type": "string",
                "example": "571219",
                "description": "The pin code of the customer"
              }
            },
            "description": "The customer address. if `tagDetails.toBeShippedByBank` is `true`, tag would be shipped here."
          },
          "kycType": {
            "enum": ["FULL", "MIN"],
            "type": "string",
            "description": "Should the wallet be created with min KYC or full KYC? Full KYC wallets enjoy higher limits but you are required to do a full KYC and follow regulatory requirements."
          },
          "vehicle": {
            "type": "object",
            "required": ["isCommercial", "class", "number"],
            "properties": {
              "class": {
                "enum": [4, 5, 6, 7, 12, 15, 16],
                "type": "string",
                "example": "4",
                "description": "the vehicle class\n- 4 - \tCar / Jeep / Van/ Tata Ace and similar mini light commercial vehicle\n- 5\t- Light Commercial Vehicle\n- 6\t- Three Axle Commerical Vehile\n- 7\t- Bus/Truck\n- 12 -\t4 to 6 Axle\n- 15 -\t7 or more Axle\n- 16 - \tHeavy Construction Machinery (HCM) / Earth Moving Equipment (EME)\n"
              },
              "number": {
                "type": "string",
                "example": "KA12AB5618",
                "description": "Vehicle number in all capitals, no spaces. eg - `KA12AB5618`"
              },
              "chasisNumber": {
                "type": "string",
                "example": "1M8GDM9AKP042788",
                "description": "The chasis number of the vehicle"
              },
              "isCommercial": {
                "type": "boolean",
                "example": false,
                "description": "Is this a commercial vehicle?"
              }
            }
          },
          "customer": {
            "type": "object",
            "required": [
              "firstName",
              "mobile",
              "lastName",
              "dob",
              "gender",
              "email"
            ],
            "properties": {
              "dob": {
                "type": "string",
                "example": "1997-02-21",
                "description": "Date of birth in YYYY-MM-DD"
              },
              "email": {
                "type": "string",
                "example": "anthonysmith@hotmail.com",
                "description": "the email of the customer"
              },
              "gender": {
                "enum": ["M", "F"],
                "type": "string",
                "example": "M",
                "description": "the gender of the customer. `M` and `F`"
              },
              "mobile": {
                "type": "string",
                "example": "8384375964",
                "description": "Mobile number of the customer"
              },
              "lastName": {
                "type": "string",
                "example": "Warren",
                "description": "Last name of the customer"
              },
              "firstName": {
                "type": "string",
                "example": "Judith",
                "description": "Firt name of the customer"
              }
            }
          },
          "document": {
            "type": "object",
            "required": ["type", "number"],
            "properties": {
              "type": {
                "enum": ["PAN", "AADHAR"],
                "type": "string",
                "example": "PAN",
                "description": "the document type"
              },
              "number": {
                "type": "string",
                "example": "ABCDE1111A",
                "description": "The document ID. For example PAN or Aadhar number"
              }
            },
            "description": "The document  details. BC needs to collect these details from the user and store on their side."
          },
          "tagDetails": {
            "type": "object",
            "required": ["toBeShippedByBank", "sequence"],
            "properties": {
              "sequence": {
                "type": "string",
                "example": "20923079",
                "description": "if `toBeShippedByBank` is `false` provide the tag sequence number you already have with you. this is preprovisioned by the bank and given to you."
              },
              "toBeShippedByBank": {
                "type": "boolean",
                "example": true,
                "description": "Should the bank be shipping the tag?"
              }
            }
          }
        }
      },
      "WalletTxnRequest": {
        "required": [
          "startDate",
          "endDate",
          "walletId",
          "limit",
          "offset",
          "transactionType"
        ],
        "properties": {
          "limit": {
            "type": "string",
            "example": "1",
            "description": "the number of results to limit in this query. Max is 100"
          },
          "offset": {
            "type": "string",
            "example": "1",
            "description": "Number of rows to skip"
          },
          "endDate": {
            "type": "string",
            "example": "2020-07-07",
            "description": "The end date you want filter by in YYYY-MM-DD"
          },
          "walletId": {
            "type": "string",
            "example": "19000009651916",
            "description": "The wallet ID"
          },
          "startDate": {
            "type": "string",
            "example": "2019-01-01",
            "description": "The start date you want to filter by YYYY-MM-DD"
          },
          "transactionType": {
            "enum": ["ALL", "CREDIT", "DEBIT"],
            "type": "string",
            "example": "ALL",
            "description": "The transaction type"
          }
        }
      },
      "VehicleStatusResponse": {
        "required": ["data", "statusCode", "statusMessage"],
        "properties": {
          "data": {
            "type": "object",
            "required": ["bankStatus", "npciMapperStatus"],
            "properties": {
              "bankStatus": {
                "enum": ["SUSPENDED", "CLOSED", "ACTIVE", "BLACKLIST"],
                "type": "string",
                "example": "ACTIVE",
                "description": "Is the vehicle active or not"
              },
              "npciMapperStatus": {
                "enum": [
                  "ACTIVE",
                  "LOW_BALANCE",
                  "NOT_FOUND",
                  "EXEMPT",
                  "BLACKLIST"
                ],
                "type": "string",
                "example": "ACTIVE",
                "description": "Is the vehicle active or not at NPCI mapper"
              }
            }
          },
          "statusCode": { "type": "string", "example": "vehicle-found" },
          "statusMessage": { "type": "string", "example": "Vehicle is found" }
        }
      }
    },
    "parameters": {
      "AxisMerchantId": {
        "in": "header",
        "name": "AXIS-MERCHANT-ID",
        "schema": { "type": "string" },
        "description": "Provisioned by Axis assigned to channel ID"
      },
      "AxisClientId": {
        "in": "header",
        "name": "AXIS-CLIENT-ID",
        "schema": { "type": "string" },
        "description": "IBM Client ID of Axis API gateway"
      },
      "AxisSaltKey": {
        "in": "header",
        "name": "AXIS-SALT-KEY",
        "schema": { "type": "string" },
        "description": "Salt Key provisioned by Axis for calculating checksum"
      },
      "AxisProductId": {
        "in": "header",
        "name": "AXIS-PRODUCT-ID",
        "schema": { "type": "string" },
        "description": "Provisioned by Axis assigned to channel ID"
      },
      "AxisEncryptionKey": {
        "in": "header",
        "name": "AXIS-ENCRYPTION-KEY",
        "schema": { "type": "string" },
        "description": "Encryption Key provisioned by Axis for end to end encryption"
      },
      "AxisClientSecret": {
        "in": "header",
        "name": "AXIS-CLIENT-SECRET",
        "schema": { "type": "string" },
        "description": "IBM Client Secret of Axis API gateway"
      },
      "AxisPosNumber": {
        "in": "header",
        "name": "AXIS-POS-NUMBER",
        "schema": { "type": "string" },
        "description": "Pos Number provisioned by Axis Bank assigned to channel ID"
      },
      "AxisChannelId": {
        "in": "header",
        "name": "AXIS-CHANNEL-ID",
        "schema": { "type": "string" },
        "description": "This value is provided by Axis and it represents a merchant in their system."
      },
      "AxisAgentId": {
        "in": "header",
        "name": "AXIS-AGENT-ID",
        "schema": { "type": "string" },
        "description": "Provisioned by Axis assigned to channel ID"
      }
    }
  }
}
